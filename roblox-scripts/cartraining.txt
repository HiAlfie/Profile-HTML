if game.PlaceId == 111130915266245 then
   local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
   local Window = Rayfield:CreateWindow({
      Name = "Symbiote Hub - Race Training v1",
      Icon = 0,
      LoadingTitle = "Symbiote Hub",
      LoadingSubtitle = "by cypruxy",
      Theme = "Ocean",
      DisableRayfieldPrompts = false,
      DisableBuildWarnings = false,
      ConfigurationSaving = {
         Enabled = true,
         FolderName = "Car Training Folder (script)",
         FileName = "Symbiote (script)"
      },
      Discord = {
         Enabled = true,
         Invite = "ffJj5ap6rx",
         RememberJoins = true
      },
      KeySystem = true,
      KeySettings = {
         Title = "Symbiote Register",
         Subtitle = "Key System",
         Note = "Try: GoatCypruxy",
         FileName = "Symbiote (key)",
         SaveKey = true,
         GrabKeyFromSite = false,
         Key = { "GoatCypruxy" }
      }
   })

   local numberValue = 0

   local FarmTab = Window:CreateTab("Auto Farm", 4483362458)

   FarmTab:CreateToggle({Name="Auto Race",CurrentValue=false,Flag="AutoRaceToggle",Callback=function(f)c=f;if c then while c do game:GetService("ReplicatedStorage").Remotes["Join Race"]:FireServer()wait(1)game:GetService("ReplicatedStorage").Remotes["Set Stat"]:FireServer("Auto Race",true)wait(1)if not c then break end end else game:GetService("ReplicatedStorage").Remotes["Set Stat"]:FireServer("Auto Race",false)game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Leave Race"):FireServer()wait(1)game:GetService("ReplicatedStorage").Remotes["TP"]:InvokeServer(1)end end})

   
   -- Dropdown for selecting rebirth index
   FarmTab:CreateDropdown({
      Name = "Rebirth Option",
      Options = { "1", "5", "20", "50", "100", "400", "1K", "5K", "25K", "75K", "200K", "500K", "2M", "25M", "100M", "1B", "50B", "500B", "50T" },
      CurrentOption = {"1"},
      Callback = function(Options)
         -- Unpack the selected option (Options is a table, so get the first option)
         local selectedOption = Options[1]

         -- Set numberValue based on the selected option
         if selectedOption == "1" then
            numberValue = 1
         elseif selectedOption == "5" then
            numberValue = 2
         elseif selectedOption == "20" then
            numberValue = 3
         elseif selectedOption == "50" then
            numberValue = 4
         elseif selectedOption == "100" then
            numberValue = 5
         elseif selectedOption == "400" then
            numberValue = 6
         elseif selectedOption == "1K" then
            numberValue = 7
         elseif selectedOption == "5K" then
            numberValue = 8
         elseif selectedOption == "25K" then
            numberValue = 9
         elseif selectedOption == "75K" then
            numberValue = 10
         elseif selectedOption == "200K" then
            numberValue = 11
         elseif selectedOption == "500K" then
            numberValue = 12
         elseif selectedOption == "2M" then
            numberValue = 13
         elseif selectedOption == "25M" then
            numberValue = 14
         elseif selectedOption == "100M" then
            numberValue = 15
         elseif selectedOption == "1B" then
            numberValue = 16
         elseif selectedOption == "50B" then
            numberValue = 17
         elseif selectedOption == "500B" then
            numberValue = 18
         elseif selectedOption == "50T" then
            numberValue = 19
         else
            numberValue = 0
         end

         Rayfield:Notify({
            Title = "Rebirth Option Updated",
            Content = "Selected rebirth index: " .. tostring(selectedOption),
            Duration = 3,
            Image = 4483362458
         })
      end
   })

   -- Toggle for auto rebirth
   FarmTab:CreateToggle({
      Name = "Auto Rebirth",
      CurrentValue = false,
      Flag = "AutoRebirthToggle",
      Callback = function(isEnabled)
         if numberValue == 0 then
            Rayfield:Notify({
               Title = "Rebirth Error",
               Content = "Please select a valid rebirth option before enabling Auto Rebirth.",
               Duration = 5,
               Image = 4483362458
            })
            return
         end

         while isEnabled do
            local success, result = pcall(function()
               return game:GetService("ReplicatedStorage").Remotes["Rebirth"]:InvokeServer(numberValue)
            end)

            if success then
               task.wait()
            else
               Rayfield:Notify({
                  Title = "Rebirth Failed",
                  Content = "Failed to rebirth: " .. tostring(result),
                  Duration = 3,
                  Image = 4483362458
               })
            end

            task.wait(1)

            -- Break the loop if the toggle is disabled
            if not Rayfield.Flags["AutoRebirthToggle"].CurrentValue then break end
         end
      end
   })

   task.wait(0.5)
   Rayfield:LoadConfiguration()
end

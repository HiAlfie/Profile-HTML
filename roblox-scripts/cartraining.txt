if game.PlaceId == 111130915266245 then
   local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
   local Window = Rayfield:CreateWindow({
      Name = "Symbiote Hub - Race Training v1",
      Icon = 0,
      LoadingTitle = "Symbiote Hub",
      LoadingSubtitle = "by cypruxy",
      Theme = "Ocean",
      DisableRayfieldPrompts = false,
      DisableBuildWarnings = false,
      ConfigurationSaving = {
         Enabled = true,
         FolderName = "Car Training Folder (script)",
         FileName = "Symbiote (script)"
      },
      Discord = {
         Enabled = true,
         Invite = "ffJj5ap6rx",
         RememberJoins = true
      },
      KeySystem = true,
      KeySettings = {
         Title = "Symbiote Register",
         Subtitle = "Key System",
         Note = "Try: GoatCypruxy",
         FileName = "Symbiote (key)",
         SaveKey = true,
         GrabKeyFromSite = false,
         Key = { "GoatCypruxy" }
      }
   })

   local running = false
   local numberValue = 0

   local HomeTab = Window:CreateTab("Home", 4483362458)

   HomeTab:CreateLabel("Credits:")
   HomeTab:CreateLabel("@idk ur username - Owner")
   HomeTab:CreateLabel("@dznv - Main Developer")

   HomeTab:CreateButton({
      Name = "Join the Discord!",
      Callback = function()
         setclipboard("https://discord.gg/ffJj5ap6rx")
         Rayfield:Notify({
            Title = "Link Copied",
            Content = "Discord invite link copied to clipboard!",
            Duration = 3,
            Image = 4483362458
         })
      end
   })

   local FarmTab = Window:CreateTab("Auto Farm", 4483362458)

	 FarmTab:CreateToggle({
	   Name = "Auto Race",
	   CurrentValue = false,
     Flag = "AutoRaceToggle",
     Callback = function(Value)
        if Value then
            game:GetService("ReplicatedStorage").Remotes["Join Race"]:FireServer()
            wait(1)
            game:GetService("ReplicatedStorage").Remotes["Set Stat"]:FireServer("Auto Race", true)
        else
            game:GetService("ReplicatedStorage").Remotes["Set Stat"]:FireServer("Auto Race", false)
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Leave Race"):FireServer()
            wait(1)
            game:GetService("ReplicatedStorage").Remotes["TP"]:InvokeServer(1)
        end
     end,
	 })

   FarmTab:CreateDropdown({
      Name = "Rebirth Option",
      Options = { "1", "5", "20", "50", "100", "400", "1K", "5K", "25K", "75K", "200K", "500K", "2M", "25M", "100M", "1B", "50B", "500B", "50T" },
      CurrentOption = {"1"},
      Callback = function(Options)
         local selectedOption = Options[1]
         if selectedOption == "1" then
            numberValue = 1
         elseif selectedOption == "5" then
            numberValue = 2
         elseif selectedOption == "20" then
            numberValue = 3
         elseif selectedOption == "50" then
            numberValue = 4
         elseif selectedOption == "100" then
            numberValue = 5
         elseif selectedOption == "400" then
            numberValue = 6
         elseif selectedOption == "1K" then
            numberValue = 7
         elseif selectedOption == "5K" then
            numberValue = 8
         elseif selectedOption == "25K" then
            numberValue = 9
         elseif selectedOption == "75K" then
            numberValue = 10
         elseif selectedOption == "200K" then
            numberValue = 11
         elseif selectedOption == "500K" then
            numberValue = 12
         elseif selectedOption == "2M" then
            numberValue = 13
         elseif selectedOption == "25M" then
            numberValue = 14
         elseif selectedOption == "100M" then
            numberValue = 15
         elseif selectedOption == "1B" then
            numberValue = 16
         elseif selectedOption == "50B" then
            numberValue = 17
         elseif selectedOption == "500B" then
            numberValue = 18
         elseif selectedOption == "50T" then
            numberValue = 19
         else
            numberValue = 0
         end

         Rayfield:Notify({
            Title = "Rebirth Option Updated",
            Content = "Selected rebirth index: " .. tostring(selectedOption),
            Duration = 3,
            Image = 4483362458
         })
      end
   })

   FarmTab:CreateToggle({
      Name = "Auto Rebirth",
      CurrentValue = false,
      Flag = "AutoRebirthToggle",
      Callback = function(isEnabled)
         if numberValue == 0 then
            if isEnabled then
               Rayfield:Notify({
                  Title = "Rebirth Error",
                  Content = "Please select a valid rebirth option before enabling Auto Rebirth.",
                  Duration = 5,
                  Image = 4483362458
               })
               return
            end
         end

         while isEnabled do
            local success, result = pcall(function()
               return game:GetService("ReplicatedStorage").Remotes["Rebirth"]:InvokeServer(numberValue)
            end)

            if success then
               task.wait()
            else
               Rayfield:Notify({
                  Title = "Rebirth Failed",
                  Content = "Failed to rebirth: " .. tostring(result),
                  Duration = 3,
                  Image = 4483362458
               })
            end

            task.wait(1)

            if not Rayfield.Flags["AutoRebirthToggle"].CurrentValue then break end
         end
      end
   })
   
	--- this is like the auto egg tab okay for cartrainigng
   local EggsTab = Window:CreateTab("Eggs", 4483362458)
   local selectedEgg = nil
   local selectedAmount = nil
   local autoEggRun = false

   EggsTab:CreateParagraph({
      Title = "Egg Categories",
      Content = "Blossom Egg & Golden Egg → Event Eggs\n" ..
               "Basic, Rare, Wood, Sand → World 1\n" ..
               "Snow, Lava, Aqua, Sakura → World 2\n" ..
               "Cave, Galaxy → World 3\n" ..
               "Beach, Sunny → World 4\n" ..
               "Angelic → World 5\n" ..
               "Cyber → World 6"
   })

   EggsTab:CreateDropdown({
      Name = "Select Egg",
      Options = {
	 "Blossom Egg", "Golden Egg",
         "Basic Egg", "Rare Egg", "Wood Egg", "Sand Egg",
         "Snow Egg", "Lava Egg", "Aqua Egg", "Sakura Egg",
         "Cave Egg", "Galaxy Egg",
         "Beach Egg", "Sunny Egg",
         "Angelic Egg",
         "Cyber Egg"
      },
      CurrentOption = {"Basic Egg"},
      Callback = function(Options)
      	selectedEgg = Options[1]
      end
   })

   EggsTab:CreateDropdown({
      Name = "Egg Amount",
      Options = { "1", "3", "6", "12" },
      CurrentOption = {"1"},
      Callback = function(Options)
         selectedAmount = tonumber(Options[1])
      end
   })

   EggsTab:CreateToggle({
      Name = "Auto Open Eggs",
      CurrentValue = false,
      Flag = "AutoOpenEggs",
      Callback = function(isEnabled)
         autoEggRun = isEnabled
         if not selectedEgg or not selectedAmount then
            Rayfield:Notify({
               Title = "Error",
               Content = "Please select both an egg and amount before enabling Auto Open Eggs.",
               Duration = 5,
               Image = 4483362458
            })
            return
         end

         while autoEggRun do
            game:GetService("ReplicatedStorage").Remotes["Buy Egg"]:InvokeServer(selectedEgg, selectedAmount)
            task.wait(0.1)
            if not Rayfield.Flags["AutoOpenEggs"].CurrentValue then break end
         end
      end
   })

   task.wait(0.5)
   Rayfield:LoadConfiguration()
end
